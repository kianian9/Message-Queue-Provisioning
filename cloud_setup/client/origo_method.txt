Johan's Origo Method:
    Settings:
        Machine Type:           e2-highcpu-8, e2-highcpu-16
        Cluster Setup:          1, 3, 5
        Brokers:                Kafka, RabbitMQ, STAN
        Producer/Consumer Mode: 1 prod/cons, 3 prod/cons, 5 prod/cons
        Message Setting:        [Originally 100 B, changed to 4000 B], 500 B, 1000 B
    Run each test 3 times for statistically significant data

    – Number of messages (total data to send 7 GB):
        * 7 000 000 000 B / 100 B = 70 000 000 messages
        ∗ 7 000 000 000 B / 500 B = 14 000 000 messages
        ∗ 7 000 000 000 B / 1000 B = 7 000 000 messages
        ∗ 7 000 000 000 B / 4000 B = 1 750 000 messages

    Using Origo Method for being able to eliminate future unsignificant tests (total 486 if run all)

    Client in these tests is of machine-type: e2-highcpu-16


    (REMEMBER: Get both resource monitoring data and broker data)
    Method:
        1) Run the so-called "middle" setting above, which is:
            Test 1: 
                    Machine Type:                       e2-highcpu-8
                    Cluster Setup:                      3
                    Brokers:                            Kafka, RabbitMQ, STAN
                    Producer Mode/Consumer Mode:        3 prod/cons
                    Message Setting:                    500 B

            1.1) After Test 1 is run 3 times for every broker, analyze the results and try to find the setting that seemed to make most
                 difference between brokers depending on throughput and latency metrics


                Results (Mean result of 3 runs):
                    * Kafka:
                        * Producer Throughput(msgs/s):  101349.5 msgs/sec
                        * Producer Throughput(MB/s):    50.6747  MB/sec

                        * Consumer Throughput(msgs/s):  505127.5 msgs/sec
                        * Consumer Throughput(MB/s):    252.5637 MB/sec
                        * Mean Latency:                 15.29 ms

                    * RabbitMQ:
                        * Producer Throughput(msgs/s):  7240.0   msgs/sec
                        * Producer Throughput(MB/s):    3.6200    MB/sec

                        * Consumer Throughput(msgs/s):  21417.2  msgs/sec
                        * Consumer Throughput(MB/s):    10.7086  MB/sec
                        * Mean Latency:                 588.85   ms

                    * STAN:
                        * Producer Throughput(msgs/s):  38208.2  msgs/sec
                        * Producer Throughput(MB/s):    19.1041  MB/sec

                        * Consumer Throughput(msgs/s):  142288.6 msgs/sec
                        * Consumer Throughput(MB/s):    71.1443  MB/sec
                        * Mean Latency:                 93.29    ms


                Analysis:
                    * RabbitMQ:
                        * Does not seem to scale well, does not make any sense to test 5 prod/cons or create 5 node cluster
                        * Very CPU heavy, a run utilize about half of the available CPUs in the cluster

                    * Kafka:
                        * Scales very good, the replication factor and number of partitions (3 in this case), helps reaching high consumer throughput
                        * Has the highest throughput and lowest latency in this test

                    * STAN:
                        * Does not seem to scale so good either (compared to Kafka), but still much better than RabbitMQ

                    * In overall, the message size seems to drop down the throughput quite a lot (compared with 1000B in the testplan)
                    * Should also test with higher machine-type and see how much the performance increases [DONE]



            1.2) Create a new setting with better machine-type and see if it makes difference, and expand tests again
                Test 2: 
                        Machine Type:                       e2-highcpu-16
                        Cluster Setup:                      3
                        Brokers:                            Kafka, RabbitMQ, STAN
                        Producer Mode/Consumer Mode:        3 prod/cons
                        Message Setting:                    500 B

                Results (Mean result of 3 runs):
                    * Kafka:
                        * Producer Throughput(msgs/s):  124075.4  msgs/sec
                        * Producer Throughput(MB/s):    62.0377   MB/sec

                        * Consumer Throughput(msgs/s):  622157.2  msgs/sec
                        * Consumer Throughput(MB/s):    311.0786  MB/sec
                        * Mean Latency:                 12.03     ms

                    * RabbitMQ:
                        * Producer Throughput(msgs/s):  8077.8    msgs/sec
                        * Producer Throughput(MB/s):    4.0389    MB/sec

                        * Consumer Throughput(msgs/s):  23624.5   msgs/sec
                        * Consumer Throughput(MB/s):    11.8122   MB/sec
                        * Mean Latency:                 530.60    ms

                    * STAN:
                        * Producer Throughput(msgs/s):  41174.0   msgs/sec
                        * Producer Throughput(MB/s):    20.5870   MB/sec

                        * Consumer Throughput(msgs/s):  154256.2  msgs/sec
                        * Consumer Throughput(MB/s):    77.1281   MB/sec
                        * Mean Latency:                 85.50     ms

                    Analysis:
                        * RabbitMQ:
                            * Results became slightly better, but not so significantly
                            * Could possibly increase performance by scaling down or using higher message size

                        * Kafka:
                            * Same as in Test 1 above, scales very good. Could try increase number of prod/cons to 5 and see if performance increase further

                        * STAN:
                            * Results became better but not significantly

                        * In overall slightly better results than in Test 1, the problems with RabbitMQ and STAN still exists:
                            * Results became in overall better for all message systems, but not significantly
                            * Conclusions:
                                1. RabbitMQ and STAN doesn't seem to scale good, possible solution is to both test smaller cluster and lower level of parallelism (1 prod/cons)
                                2. Kafka seem to scale very good, try both a 5 node cluster and 5 prod/cons for 3 node cluster
                                3. Don't run smaller message sizes than 500 B as results became worse than tests done in testplan
                                


            1.3) Test smaller cluster setting to see if RabbitMQ's and STAN's performance increase (only difference from the "middle" setting (Test 1) is number of nodes):
                Test 3: 
                        Machine Type:                       e2-highcpu-8
                        Cluster Setup:                      1
                        Brokers:                            Kafka, RabbitMQ, STAN
                        Producer Mode/Consumer Mode:        3 prod/cons
                        Message Setting:                    500 B

                Results (Mean result of 3 runs):
                    * Kafka:
                        * Producer Throughput(msgs/s):  133714.5  msgs/sec
                        * Producer Throughput(MB/s):    66.8572   MB/sec

                        * Consumer Throughput(msgs/s):  467553.1  msgs/sec
                        * Consumer Throughput(MB/s):    233.7766  MB/sec
                        * Mean Latency:                 17.20     ms

                    * RabbitMQ:
                        * Producer Throughput(msgs/s):  8140.5    msgs/sec
                        * Producer Throughput(MB/s):    4.0703    MB/sec

                        * Consumer Throughput(msgs/s):  24563.0   msgs/sec
                        * Consumer Throughput(MB/s):    12.2815   MB/sec
                        * Mean Latency:                 488.15    ms

                    * STAN:
                        * Producer Throughput(msgs/s):  56431.1   msgs/sec
                        * Producer Throughput(MB/s):    28.2156   MB/sec

                        * Consumer Throughput(msgs/s):  111891.8  msgs/sec
                        * Consumer Throughput(MB/s):    55.9459   MB/sec
                        * Mean Latency:                 107.16    ms

                    Analysis:
                        * In general better results than in Test 1, the performance of RabbitMQ and STAN became better in this test:
                            * Conclusions:
                                * The STAN broker's producer throughput became higher, while the consumer throughput became worse, which leads to higher latencies
                                    * The "leader/master" broker doesn't need to replicate the data which therefore leads to higher publisher throughput
                                    * A possible reason why the consumer throughput is getting worse could that there arise a bottleneck at the broker (due to higher producer throughput than Test 1),
                                      and it does not keep up with delivering messages to consumers
                                * As in STAN, all write/read requests goes through the leader/master in RabbitMQ, and since we don't have any data replication, the latency & throughput gets better compared to Test 1
                                * The results became slightly better for Kafka as well, despite the fact that Test 1 uses 3 number of partitions and 3 broker to replicate the data, the higher level of parallelism does
                                  not lead to higher performance compared to a single node cluster setup with num.partitions & replication factor == 1
                                    * The data replication could potentially lead to lower producer throughput which then also impacts the consumer throughput.
                                * Results became in overall better for all message systems
                                
                            * For improving the performance further, we should test the systems with a 1 prod/cons setup as well... [DONE]
                                    


            1.4) Test lower level of parallelism to see if RabbitMQ's and STAN's performance increase (only difference from the "middle" setting (Test 1) is 1 prod/cons):
                Test 4: 
                        Machine Type:                       e2-highcpu-8
                        Cluster Setup:                      3
                        Brokers:                            Kafka, RabbitMQ, STAN
                        Producer Mode/Consumer Mode:        1 prod/cons
                        Message Setting:                    500 B

                Results (Mean result of 3 runs):
                    * Kafka:
                        * Producer Throughput(msgs/s):  100900.3  msgs/sec
                        * Producer Throughput(MB/s):    50.4501   MB/sec

                        * Consumer Throughput(msgs/s):  100887.4  msgs/sec
                        * Consumer Throughput(MB/s):    50.4437   MB/sec
                        * Mean Latency:                 23.67     ms

                    * RabbitMQ:
                        * Producer Throughput(msgs/s):  12237.3   msgs/sec
                        * Producer Throughput(MB/s):    6.1187    MB/sec

                        * Consumer Throughput(msgs/s):  12233.8   msgs/sec
                        * Consumer Throughput(MB/s):    6.1169    MB/sec
                        * Mean Latency:                 342.10    ms

                    * STAN:
                        * Producer Throughput(msgs/s):  34358.4   msgs/sec
                        * Producer Throughput(MB/s):    17.1792   MB/sec

                        * Consumer Throughput(msgs/s):  34349.7   msgs/sec
                        * Consumer Throughput(MB/s):    17.1748   MB/sec
                        * Mean Latency:                 126.56    ms


                    Analysis:
                        * The producer throughput almost doubled for RabbitMQ, while it didn't really made an impact for STAN
                            * More than 200 ms lower latency for the messages in RabbitMQ compared to Test 1 - good implication on that RabbitMQ is not horizontal scalable
                        * Kafka reached its peak for the producer throughput, by comparing Test 1 with Test 4, we can see both are reaching 50 MB/s, and increasing nr of producers doesn't really help


                        * An increase of the message size (to 1000 B) could potentially solve the broker limitations, and better performance can be reached [DONE]


            1.5) Test higher message size (1000B) to see if overall performance increases or not (only difference from the "middle" setting (Test 1) is 1000 B message size):
                Test 5: 
                        Machine Type:                       e2-highcpu-8
                        Cluster Setup:                      3
                        Brokers:                            Kafka, RabbitMQ, STAN
                        Producer Mode/Consumer Mode:        3 prod/cons
                        Message Setting:                    1000 B


                Results (Mean result of 3 runs):
                    * Kafka:
                        * Producer Throughput(msgs/s):  51195.0   msgs/sec
                        * Producer Throughput(MB/s):    51.1950   MB/sec

                        * Consumer Throughput(msgs/s):  262338.5  msgs/sec
                        * Consumer Throughput(MB/s):    262.3385  MB/sec
                        * Mean Latency:                 15.08     ms

                    * RabbitMQ:
                        * Producer Throughput(msgs/s):  5955.3    msgs/sec
                        * Producer Throughput(MB/s):    5.9553    MB/sec

                        * Consumer Throughput(msgs/s):  20960.7   msgs/sec
                        * Consumer Throughput(MB/s):    20.9607   MB/sec
                        * Mean Latency:                 317.25    ms

                    * STAN:
                        * Producer Throughput(msgs/s):  20385.1   msgs/sec
                        * Producer Throughput(MB/s):    20.3851   MB/sec

                        * Consumer Throughput(msgs/s):  78005.6   msgs/sec
                        * Consumer Throughput(MB/s):    78.0056   MB/sec
                        * Mean Latency:                 91.47     ms

                Analysis:
                    * RabbitMQ increased its performance using 1000 B messages instead of 500 B a lot compared to other 3 broker cluster tests with 3 prod/cons
                    * The consumer throughput for STAN became much better when using this setup, NATS server seems to be more optimized for larger messages than 500 B
                    * The message size did not have any impact on Kafka brokers, maybe try larger scale?

                    * Could test same broker setup with e2-highcpu-16 machine type as well [DONE]
                    * Could also test a 5 node cluster to see if Kafka scales even more? [DONE]
                    * Could also test a single node cluster setup using 1 prod/cons to see how much better RabbitMQ perform


            1.6) Test higher message size (1000B) with e2-highcpu-16 type to see if overall performance further (difference from the "middle" setting (Test 1) is message size and machine type):
                Test 6: 
                        Machine Type:                       e2-highcpu-16
                        Cluster Setup:                      3
                        Brokers:                            Kafka, RabbitMQ, STAN
                        Producer Mode/Consumer Mode:        3 prod/cons
                        Message Setting:                    1000 B

                Results (Mean result of 3 runs):
                    * Kafka:
                        * Producer Throughput(msgs/s):  63140.5   msgs/sec
                        * Producer Throughput(MB/s):    63.1405   MB/sec

                        * Consumer Throughput(msgs/s):  331587.2  msgs/sec
                        * Consumer Throughput(MB/s):    331.5872  MB/sec
                        * Mean Latency:                 11.79     ms

                    * RabbitMQ:
                        * Producer Throughput(msgs/s):  6021.8    msgs/sec
                        * Producer Throughput(MB/s):    6.0218    MB/sec

                        * Consumer Throughput(msgs/s):  21267.1   msgs/sec
                        * Consumer Throughput(MB/s):    21.2671   MB/sec
                        * Mean Latency:                 280.24    ms

                    * STAN:
                        * Producer Throughput(msgs/s):  22459.1   msgs/sec
                        * Producer Throughput(MB/s):    22.4591   MB/sec

                        * Consumer Throughput(msgs/s):  95949.0   msgs/sec
                        * Consumer Throughput(MB/s):    95.9490   MB/sec
                        * Mean Latency:                 72.91     ms

                Analysis:
                    * Compared to Test 2, where we had the same setup but were running with 500 B message size, we can for all brokers see an increase in both producer and consumer throughput
                        * RabbitMQ benefited most from having higher message sizes

            1.7) Test having larger cluster to see if Kafka scales further (difference from the "middle" setting (Test 1) is cluster size):
                Test 7: 
                        Machine Type:                       e2-highcpu-8
                        Cluster Setup:                      5
                        Brokers:                            Kafka, RabbitMQ, STAN
                        Producer Mode/Consumer Mode:        3 prod/cons
                        Message Setting:                    500 B

                Results (Mean result of 3 runs):
                    * Kafka:
                        * Producer Throughput(msgs/s):  102389.1  msgs/sec
                        * Producer Throughput(MB/s):    51.1946   MB/sec

                        * Consumer Throughput(msgs/s):  476752.1  msgs/sec
                        * Consumer Throughput(MB/s):    238.3760  MB/sec
                        * Mean Latency:                 15.27     ms

                    * RabbitMQ:
                        * Producer Throughput(msgs/s):  8331.3    msgs/sec
                        * Producer Throughput(MB/s):    4.1657    MB/sec

                        * Consumer Throughput(msgs/s):  26539.1   msgs/sec
                        * Consumer Throughput(MB/s):    13.2695   MB/sec
                        * Mean Latency:                 469.68    ms

                    * STAN:
                        * Producer Throughput(msgs/s):  32912.4   msgs/sec
                        * Producer Throughput(MB/s):    16.4562   MB/sec

                        * Consumer Throughput(msgs/s):  90108.8   msgs/sec
                        * Consumer Throughput(MB/s):    45.0544   MB/sec
                        * Mean Latency:                 183.00    ms

                Analysis:
                    * The Kafka performance did not improve compared to other tests above, could test increasing number prod/cons to 5 and see if higher number of partitions helps for larger clients [DONE]


            1.8) Test having larger cluster with 5 prod/cons to see if Kafka scales further (difference from the "middle" setting (Test 1) is cluster size and producer/consumer mode):
                Test 8: 
                        Machine Type:                       e2-highcpu-8
                        Cluster Setup:                      5
                        Brokers:                            Kafka, RabbitMQ, STAN
                        Producer Mode/Consumer Mode:        5 prod/cons
                        Message Setting:                    500 B


                Results (Mean result of 3 runs):
                    * Kafka:
                        * Producer Throughput(msgs/s):  102955.7  msgs/sec
                        * Producer Throughput(MB/s):    51.4779   MB/sec

                        * Consumer Throughput(msgs/s):  692260.2  msgs/sec
                        * Consumer Throughput(MB/s):    346.1301  MB/sec
                        * Mean Latency:                 17.01     ms

                    * RabbitMQ:
                        * Producer Throughput(msgs/s):  4214,9    msgs/sec
                        * Producer Throughput(MB/s):    2.1075    MB/sec

                        * Consumer Throughput(msgs/s):  22920.5   msgs/sec
                        * Consumer Throughput(MB/s):    11.4602   MB/sec
                        * Mean Latency:                 995.17    ms

                    * STAN:
                        * Producer Throughput(msgs/s):  33223.0   msgs/sec
                        * Producer Throughput(MB/s):    16.6115   MB/sec

                        * Consumer Throughput(msgs/s):  164789.9  msgs/sec
                        * Consumer Throughput(MB/s):    82.3949   MB/sec
                        * Mean Latency:                 192.99    ms

                Analysis:
                    * By using higher level of parallelism and replication factor/number of partitions, the consumer throughput for Kafka became high
                        * A possible answer to why Test 7 didn't perform this well could be too small number of partitions, not benefiting larger levels of parallelism
                    * However, the producer throughput for RabbitMQ and STAN became much less due to consensus overhead

                    * Could test the same settings with higher machine type to see how much more the performance could be increased [DONE]
                    * Could also test the same settings, with the main difference where larger message sizes (1000 B) are used [DONE]
                    * Could also test a single broker setup using this setup to see how much the performance differ [MAYBE NOT NEEDED - SEE RESULTS OF Test 3]
                    * Could also test a single broker setup with 1 prod/cons for seeing how much impact consensus overhead have on RabbitMQ and STAN


            1.9) Test having larger cluster with 5 prod/cons and using e2-highcpu-16 machine type to see how much performance increases compared to Test 8 above (difference from the "middle" setting (Test 1) is cluster size, producer/consumer mode and machine type):
                Test 9: 
                        Machine Type:                       e2-highcpu-16
                        Cluster Setup:                      5
                        Brokers:                            Kafka, RabbitMQ, STAN
                        Producer Mode/Consumer Mode:        5 prod/cons
                        Message Setting:                    500 B


                Results (Mean result of 3 runs):
                    * Kafka:
                        * Producer Throughput(msgs/s):  122441.9  msgs/sec
                        * Producer Throughput(MB/s):    61.2209   MB/sec

                        * Consumer Throughput(msgs/s):  852322.4  msgs/sec
                        * Consumer Throughput(MB/s):    426.1612  MB/sec
                        * Mean Latency:                 14.04     ms

                    * RabbitMQ:
                        * Producer Throughput(msgs/s):  4310.7    msgs/sec
                        * Producer Throughput(MB/s):    2.1554    MB/sec

                        * Consumer Throughput(msgs/s):  26766.1   msgs/sec
                        * Consumer Throughput(MB/s):    13.3830   MB/sec
                        * Mean Latency:                 829.21    ms

                    * STAN:
                        * Producer Throughput(msgs/s):  36578.9   msgs/sec
                        * Producer Throughput(MB/s):    18.2895   MB/sec

                        * Consumer Throughput(msgs/s):  174275.8  msgs/sec
                        * Consumer Throughput(MB/s):    87.1379   MB/sec
                        * Mean Latency:                 140.57    ms

                Analysis:
                    * The performance of the systems increases quite a lot in overall by changing to better machine types
                        * Especially for Kafka's consumer throughput, where the throughput increased 80 MB/s
                        * Doesn't really have any impact on RabbitMQ, could possibly be better by increasing the message size (as we saw before)

                    * Could test using the same settings where a 1 node and 3 node cluster with e2-highcpu-8 machine type are used instead for seeing how the performance gets affected


            1.10) Test having larger cluster with 5 prod/cons and using e2-highcpu-16 machine type with 1000 B message to see how much performance increases compared to Test 9 above:
                Test 10: 
                        Machine Type:                       e2-highcpu-16
                        Cluster Setup:                      5
                        Brokers:                            Kafka, RabbitMQ, STAN
                        Producer Mode/Consumer Mode:        5 prod/cons
                        Message Setting:                    1000 B


                Results (Mean result of 3 runs):
                    * Kafka:
                        * Producer Throughput(msgs/s):  62606.7   msgs/sec
                        * Producer Throughput(MB/s):    62.6067   MB/sec

                        * Consumer Throughput(msgs/s):  478281.3  msgs/sec
                        * Consumer Throughput(MB/s):    478.2813  MB/sec
                        * Mean Latency:                 13.92     ms

                    * RabbitMQ:
                        * Producer Throughput(msgs/s):  3090.3    msgs/sec
                        * Producer Throughput(MB/s):    3.0903    MB/sec

                        * Consumer Throughput(msgs/s):  19946.1   msgs/sec
                        * Consumer Throughput(MB/s):    19.9461   MB/sec
                        * Mean Latency:                 2089.51   ms

                    * STAN:
                        * Producer Throughput(msgs/s):  21888.1   msgs/sec
                        * Producer Throughput(MB/s):    21.8881   MB/sec

                        * Consumer Throughput(msgs/s):  122614.6  msgs/sec
                        * Consumer Throughput(MB/s):    122.6146  MB/sec
                        * Mean Latency:                 143.13    ms

                Analysis:
                    * Changing the message size had a really good impact on Kafka's consumer throughput
                    * The consumer throughput for STAN also increased by using larger message size


            1.11) Test if a single broker setup with 5 prod/cons can match the performance of a 5 node setup (as in Test 8) [Should be optimal cluster setup for RabbitMQ and STAN (no replication/consensus overhead]:
                Test 11: 
                        Machine Type:                       e2-highcpu-8
                        Cluster Setup:                      1
                        Brokers:                            Kafka, RabbitMQ, STAN
                        Producer Mode/Consumer Mode:        5 prod/cons
                        Message Setting:                    500 B


                Results (Mean result of 3 runs):
                    * Kafka[1 partition]:
                        * Producer Throughput(msgs/s):  132631.9  msgs/sec
                        * Producer Throughput(MB/s):    66.3159   MB/sec

                        * Consumer Throughput(msgs/s):  710031.6  msgs/sec
                        * Consumer Throughput(MB/s):    355.0158  MB/sec
                        * Mean Latency:                 15.52     ms

                    * Kafka[16 partitions]:
                        * Producer Throughput(msgs/s):  134151.8  msgs/sec
                        * Producer Throughput(MB/s):    67.0759   MB/sec

                        * Consumer Throughput(msgs/s):  770033.7  msgs/sec
                        * Consumer Throughput(MB/s):    385.0168  MB/sec
                        * Mean Latency:                 35.16     ms

                    * RabbitMQ:
                        * Producer Throughput(msgs/s):  4446.0    msgs/sec
                        * Producer Throughput(MB/s):    2.2230    MB/sec

                        * Consumer Throughput(msgs/s):  32146.2   msgs/sec
                        * Consumer Throughput(MB/s):    16.0731   MB/sec
                        * Mean Latency:                 653.59    ms

                    * STAN:
                        * Producer Throughput(msgs/s):  58570.7   msgs/sec
                        * Producer Throughput(MB/s):    29.2853   MB/sec

                        * Consumer Throughput(msgs/s):  162601.3  msgs/sec
                        * Consumer Throughput(MB/s):    81.3007   MB/sec
                        * Mean Latency:                 122.43    ms


                Analysis:
                    * Compared to Test 8, the consumer throughput for Kafka and RabbitMQ got much better:
                        * Implying that replication comes with a cost of degraded throughput
                    * The producer throughput for STAN became almost twice as large compared to Test 8:
                        * Shows how much impact replication have on performance


            1.12) Testing for better performance compared to Test 11 above (changing to 1000 B message) [Should be optimal cluster setup for RabbitMQ and STAN (no replication/consensus overhead]:
                Test 12: 
                        Machine Type:                       e2-highcpu-8
                        Cluster Setup:                      1
                        Brokers:                            Kafka, RabbitMQ, STAN
                        Producer Mode/Consumer Mode:        5 prod/cons
                        Message Setting:                    1000 B


                Results (Mean result of 3 runs):
                    * Kafka[1 partition]:
                        * Producer Throughput(msgs/s):  67347.2   msgs/sec
                        * Producer Throughput(MB/s):    67.3472   MB/sec

                        * Consumer Throughput(msgs/s):  421311.1  msgs/sec
                        * Consumer Throughput(MB/s):    421.3111  MB/sec
                        * Mean Latency:                 14.73     ms

                    * Kafka[16 partitions]:
                        * Producer Throughput(msgs/s):  68149.6   msgs/sec
                        * Producer Throughput(MB/s):    68.1496   MB/sec

                        * Consumer Throughput(msgs/s):  429399.4  msgs/sec
                        * Consumer Throughput(MB/s):    429.3994  MB/sec
                        * Mean Latency:                 17.39     ms

                    * RabbitMQ:
                        * Producer Throughput(msgs/s):      msgs/sec
                        * Producer Throughput(MB/s):        MB/sec

                        * Consumer Throughput(msgs/s):     msgs/sec
                        * Consumer Throughput(MB/s):       MB/sec
                        * Mean Latency:                     ms

                    * STAN:
                        * Producer Throughput(msgs/s):     msgs/sec
                        * Producer Throughput(MB/s):       MB/sec

                        * Consumer Throughput(msgs/s):    msgs/sec
                        * Consumer Throughput(MB/s):       MB/sec
                        * Mean Latency:                     ms





            1.13) Test having a single broker setup with 1 prod/cons for seeing how much impact consensus overhead have on RabbitMQ and STAN:
                Test 13: 
                        Machine Type:                       e2-highcpu-8
                        Cluster Setup:                      1
                        Brokers:                            Kafka, RabbitMQ, STAN
                        Producer Mode/Consumer Mode:        1 prod/cons
                        Message Setting:                    500 B


                Results (Mean result of 3 runs):
                    * Kafka[1 partition]:
                        * Producer Throughput(msgs/s):  128157.9  msgs/sec
                        * Producer Throughput(MB/s):    64.0789   MB/sec

                        * Consumer Throughput(msgs/s):  128137.5  msgs/sec
                        * Consumer Throughput(MB/s):    64.0688   MB/sec
                        * Mean Latency:                 20.19     ms

                    * Kafka[16 partitions]:
                        * Producer Throughput(msgs/s):  127065.1  msgs/sec
                        * Producer Throughput(MB/s):    63.5325   MB/sec

                        * Consumer Throughput(msgs/s):  127035.9  msgs/sec
                        * Consumer Throughput(MB/s):    63.5179   MB/sec
                        * Mean Latency:                 22.03     ms

                    * RabbitMQ:
                        * Producer Throughput(msgs/s):  13853.7   msgs/sec
                        * Producer Throughput(MB/s):    6.9268    MB/sec

                        * Consumer Throughput(msgs/s):  13849.5   msgs/sec
                        * Consumer Throughput(MB/s):    6.9247    MB/sec
                        * Mean Latency:                 299.79    ms

                    * STAN:
                        * Producer Throughput(msgs/s):  28885.2   msgs/sec
                        * Producer Throughput(MB/s):    14.4426   MB/sec

                        * Consumer Throughput(msgs/s):  28882.2   msgs/sec
                        * Consumer Throughput(MB/s):    14.4411   MB/sec
                        * Mean Latency:                 142.43    ms


            1.14) Testing for better performance compared to Test 12 above (changing to 4000 B message) [Should be optimal cluster setup for RabbitMQ and STAN (no replication/consensus overhead]:
                Test 14: 
                        Machine Type:                       e2-highcpu-8
                        Cluster Setup:                      1
                        Brokers:                            Kafka, RabbitMQ, STAN
                        Producer Mode/Consumer Mode:        5 prod/cons
                        Message Setting:                    4000 B


                Results (Mean result of 3 runs):
                    * Kafka[1 partition]:
                        * Producer Throughput(msgs/s):  17110.7   msgs/sec
                        * Producer Throughput(MB/s):    68.4430   MB/sec

                        * Consumer Throughput(msgs/s):  115576.8  msgs/sec
                        * Consumer Throughput(MB/s):    462.3073  MB/sec
                        * Mean Latency:                 16.55     ms

                    * Kafka[16 partitions]:
                        * Producer Throughput(msgs/s):  17402.4   msgs/sec
                        * Producer Throughput(MB/s):    69.6096   MB/sec

                        * Consumer Throughput(msgs/s):  117898.3  msgs/sec
                        * Consumer Throughput(MB/s):    471.5934  MB/sec
                        * Mean Latency:                 137.75    ms

                    * RabbitMQ:
                        * Producer Throughput(msgs/s):      msgs/sec
                        * Producer Throughput(MB/s):        MB/sec

                        * Consumer Throughput(msgs/s):     msgs/sec
                        * Consumer Throughput(MB/s):       MB/sec
                        * Mean Latency:                     ms

                    * STAN:
                        * Producer Throughput(msgs/s):     msgs/sec
                        * Producer Throughput(MB/s):       MB/sec

                        * Consumer Throughput(msgs/s):    msgs/sec
                        * Consumer Throughput(MB/s):       MB/sec
                        * Mean Latency:                     ms



            1.15) Testing for better performance compared to Test 13 above (changing to 1000 B message) [Should be optimal cluster setup for RabbitMQ and STAN (no replication/consensus overhead]:
                Test 15: 
                        Machine Type:                       e2-highcpu-8
                        Cluster Setup:                      1
                        Brokers:                            Kafka, RabbitMQ, STAN
                        Producer Mode/Consumer Mode:        1 prod/cons
                        Message Setting:                    1000 B


                Results (Mean result of 3 runs):
                    * Kafka[1 partition]:
                        * Producer Throughput(msgs/s):  68382.5   msgs/sec
                        * Producer Throughput(MB/s):    68.3826   MB/sec

                        * Consumer Throughput(msgs/s):  68364.0   msgs/sec
                        * Consumer Throughput(MB/s):    68.3640   MB/sec
                        * Mean Latency:                 19.86     ms

                    * Kafka[16 partitions]:
                        * Producer Throughput(msgs/s):  66372.7   msgs/sec
                        * Producer Throughput(MB/s):    66.3727   MB/sec

                        * Consumer Throughput(msgs/s):  66391.3   msgs/sec
                        * Consumer Throughput(MB/s):    66.3913   MB/sec
                        * Mean Latency:                 22.55     ms

                    * RabbitMQ:
                        * Producer Throughput(msgs/s):      msgs/sec
                        * Producer Throughput(MB/s):        MB/sec

                        * Consumer Throughput(msgs/s):     msgs/sec
                        * Consumer Throughput(MB/s):       MB/sec
                        * Mean Latency:                     ms

                    * STAN:
                        * Producer Throughput(msgs/s):     msgs/sec
                        * Producer Throughput(MB/s):       MB/sec

                        * Consumer Throughput(msgs/s):    msgs/sec
                        * Consumer Throughput(MB/s):       MB/sec
                        * Mean Latency:                     ms



            1.16) Testing for better performance compared to Test 15 above (changing to 4000 B message) [Should be optimal cluster setup for RabbitMQ and STAN (no replication/consensus overhead]:
                Test 16: 
                        Machine Type:                       e2-highcpu-8
                        Cluster Setup:                      1
                        Brokers:                            Kafka, RabbitMQ, STAN
                        Producer Mode/Consumer Mode:        1 prod/cons
                        Message Setting:                    4000 B


                Results (Mean result of 3 runs):
                    * Kafka[1 partition]:
                        * Producer Throughput(msgs/s):  17107.4   msgs/sec
                        * Producer Throughput(MB/s):    68.4295   MB/sec

                        * Consumer Throughput(msgs/s):  17097.0  msgs/sec
                        * Consumer Throughput(MB/s):    68.3880   MB/sec
                        * Mean Latency:                 19.93    ms

                    * Kafka[16 partitions]:
                        * Producer Throughput(msgs/s):  16700.9   msgs/sec
                        * Producer Throughput(MB/s):    66.8035   MB/sec

                        * Consumer Throughput(msgs/s):  16697.5   msgs/sec
                        * Consumer Throughput(MB/s):    66.7900   MB/sec
                        * Mean Latency:                 23.27     ms

                    * RabbitMQ:
                        * Producer Throughput(msgs/s):      msgs/sec
                        * Producer Throughput(MB/s):        MB/sec

                        * Consumer Throughput(msgs/s):     msgs/sec
                        * Consumer Throughput(MB/s):       MB/sec
                        * Mean Latency:                     ms

                    * STAN:
                        * Producer Throughput(msgs/s):     msgs/sec
                        * Producer Throughput(MB/s):       MB/sec

                        * Consumer Throughput(msgs/s):    msgs/sec
                        * Consumer Throughput(MB/s):       MB/sec
                        * Mean Latency:                     ms


            1.17) Testing for better performance compared to Test 15 above (changing to e2-highcpu-16) [Should be optimal cluster setup for RabbitMQ and STAN (no replication/consensus overhead]:
                Test 17: 
                        Machine Type:                       e2-highcpu-16
                        Cluster Setup:                      1
                        Brokers:                            Kafka, RabbitMQ, STAN
                        Producer Mode/Consumer Mode:        1 prod/cons
                        Message Setting:                    1000 B

                Results (Mean result of 3 runs):
                    * Kafka[1 partition]:
                        * Producer Throughput(msgs/s):  86261.8   msgs/sec
                        * Producer Throughput(MB/s):    86.2618   MB/sec

                        * Consumer Throughput(msgs/s):  86244.1   msgs/sec
                        * Consumer Throughput(MB/s):    86.2441   MB/sec
                        * Mean Latency:                 16.43     ms

                    * Kafka[16 partitions]:
                        * Producer Throughput(msgs/s):  85109.6   msgs/sec
                        * Producer Throughput(MB/s):    85.1068   MB/sec

                        * Consumer Throughput(msgs/s):  85040.5   msgs/sec
                        * Consumer Throughput(MB/s):    85.0405   MB/sec
                        * Mean Latency:                 17.93     ms

                    * RabbitMQ:
                        * Producer Throughput(msgs/s):      msgs/sec
                        * Producer Throughput(MB/s):        MB/sec

                        * Consumer Throughput(msgs/s):     msgs/sec
                        * Consumer Throughput(MB/s):       MB/sec
                        * Mean Latency:                     ms

                    * STAN:
                        * Producer Throughput(msgs/s):     msgs/sec
                        * Producer Throughput(MB/s):       MB/sec

                        * Consumer Throughput(msgs/s):    msgs/sec
                        * Consumer Throughput(MB/s):       MB/sec
                        * Mean Latency:                     ms



            1.18) Testing for better performance compared to Test 16 above (changing to e2-highcpu-16) [Should be optimal cluster setup for RabbitMQ and STAN (no replication/consensus overhead]:
                Test 18: 
                        Machine Type:                       e2-highcpu-16
                        Cluster Setup:                      1
                        Brokers:                            Kafka, RabbitMQ, STAN
                        Producer Mode/Consumer Mode:        1 prod/cons
                        Message Setting:                    4000 B

                Results (Mean result of 3 runs):
                    * Kafka[1 partition]:
                        * Producer Throughput(msgs/s):  21339.1   msgs/sec
                        * Producer Throughput(MB/s):    85.3565   MB/sec

                        * Consumer Throughput(msgs/s):  21335.3   msgs/sec
                        * Consumer Throughput(MB/s):    85.3411   MB/sec
                        * Mean Latency:                 16.44     ms

                    * Kafka[16 partitions]:
                        * Producer Throughput(msgs/s):  19170.6   msgs/sec
                        * Producer Throughput(MB/s):    76.7222   MB/sec

                        * Consumer Throughput(msgs/s):  19177.1   msgs/sec
                        * Consumer Throughput(MB/s):    76.7085   MB/sec
                        * Mean Latency:                 21.67     ms

                    * RabbitMQ:
                        * Producer Throughput(msgs/s):      msgs/sec
                        * Producer Throughput(MB/s):        MB/sec

                        * Consumer Throughput(msgs/s):     msgs/sec
                        * Consumer Throughput(MB/s):       MB/sec
                        * Mean Latency:                     ms

                    * STAN:
                        * Producer Throughput(msgs/s):     msgs/sec
                        * Producer Throughput(MB/s):       MB/sec

                        * Consumer Throughput(msgs/s):    msgs/sec
                        * Consumer Throughput(MB/s):       MB/sec
                        * Mean Latency:                     ms



            1.19) Testing for better performance compared to Test 12 above (changing to e2-highcpu-16) [Should be optimal cluster setup for RabbitMQ and STAN (no replication/consensus overhead]:
                Test 19: 
                        Machine Type:                       e2-highcpu-16
                        Cluster Setup:                      1
                        Brokers:                            Kafka, RabbitMQ, STAN
                        Producer Mode/Consumer Mode:        5 prod/cons
                        Message Setting:                    1000 B

                Results (Mean result of 3 runs):
                    * Kafka[1 partition]:
                        * Producer Throughput(msgs/s):  86835.7   msgs/sec
                        * Producer Throughput(MB/s):    86.8357   MB/sec

                        * Consumer Throughput(msgs/s):  481121.4  msgs/sec
                        * Consumer Throughput(MB/s):    481.1214  MB/sec
                        * Mean Latency:                 12.54     ms

                    * Kafka[16 partitions]:
                        * Producer Throughput(msgs/s):  86179.2   msgs/sec
                        * Producer Throughput(MB/s):    86.1792   MB/sec

                        * Consumer Throughput(msgs/s):  497185.1  msgs/sec
                        * Consumer Throughput(MB/s):    497.1851  MB/sec
                        * Mean Latency:                 22.89     ms

                    * RabbitMQ:
                        * Producer Throughput(msgs/s):      msgs/sec
                        * Producer Throughput(MB/s):        MB/sec

                        * Consumer Throughput(msgs/s):     msgs/sec
                        * Consumer Throughput(MB/s):       MB/sec
                        * Mean Latency:                     ms

                    * STAN:
                        * Producer Throughput(msgs/s):     msgs/sec
                        * Producer Throughput(MB/s):       MB/sec

                        * Consumer Throughput(msgs/s):    msgs/sec
                        * Consumer Throughput(MB/s):       MB/sec
                        * Mean Latency:                     ms


            1.20) Testing for better performance compared to Test 14 above (changing to e2-highcpu-16) [Should be optimal cluster setup for RabbitMQ and STAN (no replication/consensus overhead]:
                Test 20: 
                        Machine Type:                       e2-highcpu-16
                        Cluster Setup:                      1
                        Brokers:                            Kafka, RabbitMQ, STAN
                        Producer Mode/Consumer Mode:        5 prod/cons
                        Message Setting:                    4000 B

                Results (Mean result of 3 runs):
                    * Kafka[1 partition]:
                        * Producer Throughput(msgs/s):  21820.2   msgs/sec
                        * Producer Throughput(MB/s):    87.2809   MB/sec

                        * Consumer Throughput(msgs/s):  133633.3  msgs/sec
                        * Consumer Throughput(MB/s):    534.5332  MB/sec
                        * Mean Latency:                 14.23     ms

                    * Kafka[16 partitions]:
                        * Producer Throughput(msgs/s):  21456.0   msgs/sec
                        * Producer Throughput(MB/s):    85.8241   MB/sec

                        * Consumer Throughput(msgs/s):  144740.7  msgs/sec
                        * Consumer Throughput(MB/s):    578.9628  MB/sec
                        * Mean Latency:                 26.29     ms

                    * RabbitMQ:
                        * Producer Throughput(msgs/s):      msgs/sec
                        * Producer Throughput(MB/s):        MB/sec

                        * Consumer Throughput(msgs/s):     msgs/sec
                        * Consumer Throughput(MB/s):       MB/sec
                        * Mean Latency:                     ms

                    * STAN:
                        * Producer Throughput(msgs/s):     msgs/sec
                        * Producer Throughput(MB/s):       MB/sec

                        * Consumer Throughput(msgs/s):    msgs/sec
                        * Consumer Throughput(MB/s):       MB/sec
                        * Mean Latency:                     ms


            













            Results (Mean result of 3 runs):
                    * Kafka:
                        * Producer Throughput(msgs/s):    msgs/sec
                        * Producer Throughput(MB/s):       MB/sec

                        * Consumer Throughput(msgs/s):    msgs/sec
                        * Consumer Throughput(MB/s):      MB/sec
                        * Mean Latency:                      ms

                    * RabbitMQ:
                        * Producer Throughput(msgs/s):      msgs/sec
                        * Producer Throughput(MB/s):        MB/sec

                        * Consumer Throughput(msgs/s):     msgs/sec
                        * Consumer Throughput(MB/s):       MB/sec
                        * Mean Latency:                     ms

                    * STAN:
                        * Producer Throughput(msgs/s):     msgs/sec
                        * Producer Throughput(MB/s):       MB/sec

                        * Consumer Throughput(msgs/s):    msgs/sec
                        * Consumer Throughput(MB/s):       MB/sec
                        * Mean Latency:                     ms